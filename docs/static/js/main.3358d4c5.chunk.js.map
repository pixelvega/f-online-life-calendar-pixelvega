{"version":3,"sources":["components/Edit.js","components/Header.js","components/List.js","App.js","index.js"],"names":["Edit","_this$props","this","props","handleDate","handleState","stateSelected","discardData","dateSelected","saveDay","handleMessage","react_default","a","createElement","className","id","type","onChange","value","htmlFor","name","checked","onKeyUp","disabled","placeholder","onClick","Component","withRouter","Header","react_router_dom","to","resetForm","List","savedStates","length","components_Header","map","item","index","key","state","alert","concat","date","message","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Date","toISOString","slice","messageInserted","bind","assertThisInitialized","checkRepeatedDate","checkSelectedState","orderResultsByDate","checkLocalStorage","saveLocalStorage","localStorage","getItem","JSON","parse","setState","setItem","stringify","e","currentTarget","history","push","sort","b","_this$state","newDay","prevState","toConsumableArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","_this2","_this$state2","react_router","path","render","components_Edit","exact","components_List","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.3358d4c5.chunk.js","sourcesContent":["import React,  {Component} from 'react';\nimport {withRouter} from 'react-router-dom';\n\nclass Edit extends Component {\n  render() {\n    const {handleDate, handleState, stateSelected, discardData, dateSelected, saveDay, handleMessage} = this.props;\n\n    return (\n      <main className=\"main\">\n        <form className=\"edit-form\">\n          <div className=\"data-form\">\n            <div className=\"date-group\">\n              <label className=\"label-date\">\n                <h2 className=\"title\">Fecha:</h2>\n                <input id=\"date\" type=\"date\" onChange={handleDate} value={dateSelected}></input>\n              </label>\n            </div>\n            <div className=\"state-group\">\n              <h2 className=\"title\">Estado:</h2>\n              <div className=\"state-group-inputs\">\n                <label  htmlFor=\"edit-form\" className=\"option-genre\">\n                  <input className=\"option-genre-input\" id=\"happy\" type=\"radio\" value=\"happy\" name=\"state\" onChange={handleState} checked={stateSelected===\"happy\"?true:false} />\n                  <p className=\"option-genre-label\">: )</p>\n                </label>\n                <label  htmlFor=\"edit-form\" className=\"option-genre\">\n                  <input className=\"option-genre-input\" id=\"unhappy\" type=\"radio\" value=\"unhappy\" name=\"state\" onChange={handleState} checked={stateSelected===\"unhappy\"?true:false} />\n                  <p className=\"option-genre-label\">: (</p>\n                </label>\n              </div>\n              <label htmlFor=\"edit-form\" className=\"label-message\">\n                  <input type=\"text\" className={stateSelected===\"unhappy\" || stateSelected===\"\" ? \"message hidden\" : \"message\"} onKeyUp={handleMessage} disabled={stateSelected===\"unhappy\"||stateSelected===\"\"?true:false} placeholder=\"Qué guay! ¿Por qué ha sido un buen día?\" />\n              </label>\n            </div>\n\n          </div>\n          <div className=\"btn-group\">\n            <label htmlFor=\"edit-form\">\n            <input type=\"button\" className=\"edit_btn save\" value=\"Guardar\" onClick={saveDay} />\n            </label>\n            <label htmlFor=\"edit-form\">\n              <input type=\"button\" className=\"edit_btn discard\" value=\"Descartar\" onClick={discardData} />\n            </label>\n          </div>\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default withRouter(Edit);","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass Header extends Component {\n  render() {\n    return(\n      <div className=\"header\">\n        <Link to=\"/Edit/\" className=\"link\" onClick={this.props.resetForm}>\n          <div className=\"header-text\">+</div>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport Header from './Header';\n\nclass List extends Component {\n  render() {\n    const {savedStates, resetForm} = this.props;\n    if(savedStates.length>0) {\n      return(\n        <div className=\"list-wrapper\">\n          <Header resetForm={resetForm} />\n          <main className=\"main\">\n            <ul className=\"days-list\">\n              {\n                savedStates.map((item, index) => {\n                  return (\n                  <li className=\"days-list-item\" key={index} onClick={() =>\n                    {\n                      \n                      if(item.state===\"happy\") {\n                        alert(`El ${item.date} era feliz porque: ${item.message}`);\n                      }\n                    }\n                  }>\n                    <div><i className={`icon ${item.state} fas ${item.state===\"happy\"?\"fa-laugh-beam\":\"fa-frown\"}`}></i></div>\n                    <div>{item.date}</div>\n                  </li>\n                  )\n                })\n              }\n            </ul>\n          </main>\n        </div>\n      );\n    } else {\n      return(\n        <div className=\"list-wrapper\">\n          <Header />\n          <main className=\"main\">\n            <div className=\"list-wrapper\">\n              No hay datos guardados\n            </div>\n          </main>\n        </div>\n      );\n    }\n  }\n}\n\nexport default List;","import React, { Component } from 'react';\nimport './App.scss';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport Edit from './components/Edit';\nimport List from './components/List';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dateSelected: new Date().toISOString().slice(0, 10),\n      stateSelected: '',\n      messageInserted: '',\n      savedStates: []\n    };\n\n    this.handleDate = this.handleDate.bind(this);\n    this.handleState = this.handleState.bind(this);\n    this.handleMessage = this.handleMessage.bind(this);\n    this.discardData = this.discardData.bind(this);\n    this.saveDay = this.saveDay.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n    this.checkRepeatedDate = this.checkRepeatedDate.bind(this);\n    this.checkSelectedState = this.checkSelectedState.bind(this);\n    this.orderResultsByDate = this.orderResultsByDate.bind(this);\n  }\n\n  componentDidMount(){\n    this.checkLocalStorage();\n  }\n  \n  componentDidUpdate() {\n    this.saveLocalStorage(this.state.savedStates, 'savedStates');\n  }\n\n\n  checkLocalStorage() {\n    if(localStorage.getItem('savedStates') !== null) {\n      const savedStates = JSON.parse(localStorage.getItem('savedStates'));\n      this.setState({\n        savedStates: savedStates\n      });\n    }\n  }\n\n  saveLocalStorage(value, key) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  handleDate(e) {\n    const date = e.currentTarget.value;\n    this.setState({\n      dateSelected: date\n    });\n  }\n\n  handleState(e) {\n    const state = e.currentTarget.value;\n\n    this.setState({\n      stateSelected: state\n    });\n  }\n\n  handleMessage(e) {\n    let message = e.currentTarget.value;\n\n    this.setState({\n      messageInserted: message\n    });\n  }\n\n  discardData() {\n\n    this.setState({\n      dateSelected: new Date().toISOString().slice(0, 10),\n      stateSelected: ''\n    });\n    this.props.history.push(\"/\");\n  }\n\n  orderResultsByDate(savedStates) {\n    const orderedStates = savedStates.sort(\n      function (a, b) {\n        if (a.date > b.date) {\n          return 1;\n        } else if (a.date < b.date) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }\n    );\n\n    return orderedStates; \n  }\n\n  saveDay() {\n    let {stateSelected, messageInserted, dateSelected} = this.state;\n\n    if (stateSelected===\"unhappy\") {\n      messageInserted = \"\";\n    }\n\n    const newDay = {\n      state: stateSelected,\n      message: messageInserted,\n      date: dateSelected\n    }\n\n    if (!this.checkRepeatedDate() && !this.checkSelectedState() && !(dateSelected === \"\")){\n\n      this.setState(prevState => ({\n        savedStates: [...prevState.savedStates, newDay]\n      }));\n      this.props.history.push(\"/\");\n    } else {\n\n      alert(`Elige una fecha no guardada y un estado, por favor ;)`);\n    }\n  }\n\n  resetForm() {\n\n    this.setState({\n      dateSelected: new Date().toISOString().slice(0, 10),\n      stateSelected: '',\n      messageInserted: ''\n    })\n  }\n\n  checkRepeatedDate() {\n    const {savedStates} = this.state;\n\n    for (const date of savedStates) {\n      if(this.state.dateSelected === date.date) {\n        return true;\n      }\n    }\n  }\n\n  checkSelectedState() {\n    const {stateSelected} = this.state;\n\n    if(stateSelected === '') {\n      return true;\n    }\n  }\n\n  render() {\n    const {stateSelected, dateSelected, savedStates} = this.state;\n\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/Edit/\" render={()=>\n            <Edit handleDate={this.handleDate} handleState={this.handleState} handleMessage={this.handleMessage} stateSelected={stateSelected} dateSelected={dateSelected} discardData={this.discardData} saveDay={this.saveDay} />\n          }/>\n\n          <Route exact path=\"/\" render={()=>\n            <List savedStates={this.orderResultsByDate(savedStates)} resetForm={this.resetForm} />\n          }/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}